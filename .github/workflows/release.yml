name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.latest_stable.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0
          fetch-tags: true

      - name: Set git remote env variable
        if: ${{ !startsWith(steps.tagmsg.outputs.message, 'Bump version') }}
        run: |
          REMOTE_REPO="https://${GITHUB_ACTOR}:${{ secrets.GH_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          echo "remote_repo=$REMOTE_REPO" >> $GITHUB_ENV

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '5.12.0'

      - name: Fetch all history for all tags and branches
        run: git fetch --prune --tags

      - name: Print GitVersion config
        run: cat GitVersion.yml

      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      # Logging GitVersion outputs
      - name: Check GitVersion Output File
        if: failure()
        run: cat GitVersionOutput.json || echo "No GitVersionOutput.json found"

      # Mostly for debugging purposes, can be removed later
      - name: Output GitVersion info
        run: |
          echo "GitVersion Output:"
          echo "Full SemVer: ${{ steps.gitversion.outputs.SemVer }}"
          echo "Major: ${{ steps.gitversion.outputs.Major }}"
          echo "Minor: ${{ steps.gitversion.outputs.Minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.Patch }}"
          echo "Pre-release tag: ${{ steps.gitversion.outputs.Pre }}"

      # DEBUG comment to test release
      # - name: Extract version from tag
      #   id: get_tag
      #   run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Set up Git config
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          tag_name: ${{ steps.gitversion.outputs.semVer }}
          name: Release ${{ steps.gitversion.outputs.semVer }}
          target_commitish: ${{ github.sha }}
          generate_release_notes: true
          prerelease: ${{ contains(steps.gitversion.outputs.semVer, '-') }}
      
      - name: Get and set latest stable tag
        id: latest_stable
        run: |
          git fetch --tags
          TAG=$(git tag --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> VERSION
      
      # - name: Update tag
      #   id: updated_tag
      #   run: |
      #     git fetch --all
      #     git checkout main
          
      #     IFS='.' read -r MAJOR MINOR PATCH <<< "${{steps.get_tag.outputs.VERSION}}"
      #     NEW_PATCH=$((PATCH + 1))
      #     echo "v$MAJOR.$MINOR.${NEW_PATCH}-pre" > VERSION
          
      #     git config user.name "github-actions"
      #     git config user.email "github-actions@github.com"
          
      #     git add VERSION
      #     git commit -m "Bump version"
      #     git push "${{ env.remote_repo }}" HEAD:main